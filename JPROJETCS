#include <iostream>
#include<cmath>
#include <string>
#include <unordered_map>
using namespace std;


//project A
//int main() {
//    long long n, m, a;
//    //n-->Hieght of the garden
//    //m-->width of the garden
//    //a-->side length of each square flower bed
//    cin >> n >> m >> a;
//
//    // Compute the number of flower beds needed
//    long long rows = (n + a - 1) / a;
//    //this line intend -->ensures proper rounding up (ceil has the same job but this is more ensure)
//    long long cols = (m + a - 1) / a;
//    //the same idea 
//
//    cout << rows*cols << endl;
//
//    return 0;
//}

//project B
//int main() {
//    int n, count = 0;
//    cin >> n;  // Read the number of projects
//
//    for (int i = 0; i < n; i++) {
//        int a, b, c; //opinions
//        cin >> a >> b >> c;  // Read confidence levels
//        if (a + b + c >= 2) {  // At least 2 engineers are confident
//            count++;
//        }
//    }
//
//    cout << count << endl;  // Output the result
//    return 0;
//}
//

//project C
//int main() {
//    int n;
//    cin >> n;
//
//    unordered_map<string, int> catalog;  // Stores book title counts
//
//    while (n--) {
//        string title;
//        cin >> title;
//
//        if (catalog[title] == 0) {
//            // First occurrence of this title
//            cout << "OK" << endl;
//        }
//        else {
//            // Title already exists, generate a new unique title
//            cout << title << catalog[title] << endl;
//        }
//        catalog[title]++;  // Increase the count for this title
//    }
//
//    return 0;
//}

//project D
//int main() {
//	int t = 0;
//	int n;
//	cin >> n;
//	if (n > 1 && n < 150) {
//		for (int i = 0; i < n;i++) {
//			if (i % 2 == 0) {
//				t++;
//			}
//			else
//				t--;
//		}
//	}
//	cout << t;
//}

//project E
//int main() {
//    string x;
//    cin >> x;
//
//    // Process each digit
//    for (int i = 0; i < x.length(); i++) {
//        int digit = x[i] - '0';  // Convert char to int
//        int transformed = 9 - digit;  // Transformation rule
//
//        // Choose the smaller value, ensuring first digit isn't zero
//        if (i == 0 && transformed == 0) {
//            continue;  // Don't transform if it makes the first digit zero
//        }
//
//        if (transformed < digit) {
//            x[i] = transformed + '0';  // Convert back to char
//        }
//    }
//
//    cout << x << endl;  // Print the final transformed number
//    return 0;
//}
